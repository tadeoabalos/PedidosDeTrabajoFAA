@page
@using PPTT.Data
@model PPTT.Pages.Administradores.DetailsModel

@{
    ViewData["Title"] = "Detalles del Administrador";
    // Recuperar el diccionario de servicios de la sesión
    var servicios = HttpContext.Session.GetObject<Dictionary<int, string>>("Servicios");

    // Debug: Imprimir el contenido del diccionario
    if (servicios != null)
    {
        foreach (var kvp in servicios)
        {
            Console.WriteLine($"Key: {kvp.Key}, Value: {kvp.Value}");
        }
    }
    else
    {
        Console.WriteLine("No se encontraron servicios en la sesión.");
    }
}

<h3>Detalles</h3>
<form>
    <body>
        <div>
            <dl class="row">
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.Admin.Nombre)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.Admin.Nombre)
                </dd>
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.Admin.Apellido)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.Admin.Apellido)
                </dd>
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.Admin.DNI)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.Admin.DNI)
                </dd>
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.Admin.Numero_Control)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.Admin.Numero_Control)
                </dd>
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.Admin.Correo)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.Admin.Correo)
                </dd>

                <!-- División -->
                <dt class="col-sm-2">
                    División
                </dt>
                <dd class="col-sm-10">
                    @if (Model.Admin.ID_Division_Fk == null)
                    {
                        @:No se le asignó una división
                    }
                    else if (Model.Admin.ID_Division_Fk == 1)
                    {
                        @:División Comunicaciones e Informática
                    }
                    else
                    {
                        @:División Mantenimiento de Instalaciones
                    }
                </dd>

                <!-- Servicio -->
                <dt class="col-sm-2">
                    Servicio
                </dt>
                <dd class="col-sm-10">
                    @if (Model.Admin.ID_Servicio_Fk == null)
                    {
                        @:No se le asignó un servicio
                    }
                    else if (servicios != null && servicios.ContainsKey(Model.Admin.ID_Servicio_Fk.Value))
                    {
                        @servicios[Model.Admin.ID_Servicio_Fk.Value]
                    }
                    else
                    {
                        @:Servicio no reconocido
                    }
                </dd>
            </dl>
        </div>
    </body>
</form>

<div class="centered-button">
    <a asp-page="./Edit" asp-route-id="@Model.Admin.ID_Usuario_Pk" class="btn-action">Editar</a>
    <a asp-page="./Index" class="btn-action">Volver a la lista</a>
</div>

<style>
    body {
        background-color: #e0e8f1;
    }

    h4 {
        color: #003d6b; /* Color azul para h4 y detalles */
        margin-top: 20px;
        margin-bottom: 10px;
        font-weight: bold;
    }

    h3 {
        font-size: 3em;
        color: #003d6b;
        margin-top: 20px;
        margin-bottom: 10px;
        font-weight: bold;
    }
    dt {
        color: #003d6b; /* Color azul para los dt */
        font-weight: bold;
    }

    a.btn-action, input[type=submit] {
        display: inline-block;
        text-decoration: none;
        padding: 8px 12px;
        margin: 4px;
        border: 1px solid #003d6b;
        border-radius: 5px;
        background-color: #003d6b;
        color: white;
        transition: background-color 0.3s, transform 0.3s;
    }

        a.btn-action:hover, input[type=submit]:hover {
            background-color: #002e5d;
            transform: translateY(-2px);
        }

    form {
        align-items: center;
        justify-content: center;
        width: 65%;
        margin: 30px auto;
        padding: 20px;
        background-color: #e0e8f1;
        border: 1px solid #003d6b;
        border-radius: 8px;
        box-shadow: 0px 0px 10px rgba(0, 61, 107, 0.2);
    }

    legend {
        font-size: 1.2em;
        color: #003d6b;
        margin-bottom: 10px;
        font-weight: bold;
    }

    .submit {
        background-color: #003d6b;
        color: white;
        padding: 10px 20px;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        transition: background-color 0.3s;
    }

        .submit:hover {
            background-color: #002e5d;
        }

    .custom-textarea {
        width: 100%;
        height: 150px;
        resize: none;
    }

    label, input[type="text"], select, .submit, h4 {
        font-size: 1em;
        font-weight: bold;
        color: #003d6b;
    }

    input[type="password"], input[type="text"], input[type="number"], select {
        width: 100%;
        padding: 8px;
        margin-bottom: 15px;
        border: 1px solid #003d6b;
        border-radius: 4px;
        background-color: white;
    }

    .centered-button {
        display: flex;
        margin-top: 20px;
        align-items: center;
        justify-content: center;
    }
</style>

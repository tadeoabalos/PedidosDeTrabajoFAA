@page
@model PPTT.Pages.Administradores.IndexPPTT

@{
    ViewData["Title"] = "Pedidos de trabajo";
}

<body>
    <div class="header-index-pt">        
        <a asp-page="./IndexAdmin" class="btn-header-pt">Volver a Index de trabajos</a>
        <div>
            <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">
            <script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
            <script src="https://cdn.jsdelivr.net/npm/flatpickr/dist/l10n/es.js"></script> <!-- Cargar idioma español -->
            <script>
                document.addEventListener("DOMContentLoaded", function () {
                    flatpickr("#fechaInicio", {
                        dateFormat: "d-m-Y", // Formato dd-mm-yyyy
                        locale: "es", // Establecer el idioma a español
                    });
                    flatpickr("#fechaFin", {
                        dateFormat: "d-m-Y", // Formato dd-mm-yyyy
                        locale: "es", // Establecer el idioma a español
                    });
                });
            </script>
            <form method="get">
                <label for="fechaInicio">Fecha Inicio:</label>
                <input type="text" id="fechaInicio" name="fechaInicio" required />

                <label for="fechaFin">Fecha Fin:</label>
                <input type="text" id="fechaFin" name="fechaFin" required />

                <button type="button" id="filtrar" class="filtrar">Filtrar</button>
            </form>
        </div> <!-- FILTRAR POR FECHA -->
        <button id="btnExportar" class="btnExportar">Exportar Excel</button>
    </div>
<table class="table" id="tabla">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.PedidoTrabajo[0].ID_Orden_Fk)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PedidoTrabajo[0].Fecha_Subida)
            </th>
            <th>
                <span>Fecha de Finalización</span>
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PedidoTrabajo[0].ID_Grado_Fk)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PedidoTrabajo[0].Apellido_Solicitante)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PedidoTrabajo[0].ID_Organismo_Fk)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PedidoTrabajo[0].RTI_Solicitante)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PedidoTrabajo[0].Numero_Oficina_PT)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PedidoTrabajo[0].Correo)
            </th>
                <th>
                    @Html.DisplayNameFor(model => model.PedidoTrabajo[0].ID_Division_Fk)
                </th>
            <th>
                @Html.DisplayNameFor(model => model.PedidoTrabajo[0].ID_Tarea_Fk)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PedidoTrabajo[0].Observacion)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PedidoTrabajo[0].ID_Estado_Fk)
            </th>          
            <th>
                Detalle/Estado
            </th>
        </tr>
    </thead>
    <tbody>
            @{
                var divisionUsuario = HttpContext.Session.GetInt32("Division");
            }

            @foreach (var item in Model.PedidoTrabajo)
            {
                if ((item.ID_Estado_Fk == 1004 || item.ID_Estado_Fk == 1006) && item.ID_Division_Fk == divisionUsuario)
                {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.ID_Orden_Fk)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Fecha_Subida)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Fecha_Estimada_Fin)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Grado.Descripcion_Grado)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Apellido_Solicitante)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Organismo.Descripcion_organismo)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.RTI_Solicitante)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Numero_Oficina_PT)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Correo)
                </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.ID_Division_Fk)
                        </td>
                <td>
                    @Html.Raw(item.Tarea.Descripcion_Tarea.Length > 3 ?
                             item.Tarea.Descripcion_Tarea.Substring(0) :
                             item.Tarea.Descripcion_Tarea)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Observacion)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Estado.Descripcion_Estado)
                </td>              
                <td>
                    <a asp-page="./Details" class="btn-action" asp-route-id="@item.ID_Orden_Trabajo_Pk">Editar Estado</a>
                </td>
            </tr>}
        }
    </tbody>
</table>

<button id="btnExportar">Exportar Excel</button>
</body>
<footer>
    <p>Dirección de Informática - Departamento de Desarrollo y Mantenimiento de Sistemas</p>
</footer>
<div class="modal fade" id="confirmModal" tabindex="-1" role="dialog" aria-labelledby="confirmModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <form method="post" asp-page-handler="AsignarUsuario">
                <div class="modal-header">
                    <h5 class="modal-title" id="confirmModalLabel">Confirmar Asignación</h5>
                </div>
                <div class="modal-body">
                    <p>¿Está seguro de querer asignar a <b id="usuarioNombre"></b> para esta tarea?</p>
                    <input type="hidden" id="usuarioId" name="UsuarioId" />
                    <input type="hidden" id="ordenTrabajoId" name="OrdenTrabajoId" />
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" id="cancelaAsignacion" data-dismiss="modal">Cancelar</button>
                    <button type="submit" class="btn btn-primary">Aceptar</button>
                </div>
            </form>
        </div>
    </div>
</div>  <!-- VENTANA MODAL ASIGNACION -->
<div class="modal fade" id="confirmPrioridadModal" tabindex="-1" role="dialog" aria-labelledby="confirmModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <form method="post" asp-page-handler="SetPrioridad">
                <div class="modal-header">
                    <h5 class="modal-title" id="confirmModalLabel">Confirmar Modificación</h5>
                </div>
                <div class="modal-body">
                    <p>¿Está seguro de cambiar la prioridad a <b id="prioridadDisplay"></b> para esta tarea?</p>
                    <input type="hidden" id="ordenTrabajo" name="OrdenTrabajoId" />
                    <input type="hidden" id="prioridadInput" name="PrioridadId" />
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" id="cancelaPrioridad" data-dismiss="modal">Cancelar</button>
                    <button type="submit" class="btn btn-primary">Aceptar</button>
                </div>
            </form>
        </div>
    </div>
</div> <!-- VENTANA MODAL PRIORIDAD -->


<!-- SCRIPTS PARA EXPORTAR AL EXCEL -->
<script src="https://unpkg.com/xlsx@0.16.9/dist/xlsx.full.min.js"></script>
<script src="https://unpkg.com/file-saverjs@latest/FileSaver.min.js"></script>
<script src="https://unpkg.com/tableexport@latest/dist/js/tableexport.min.js"></script>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const $btnExportar = document.querySelector("#btnExportar"),
            $tabla = document.querySelector("#tabla");

        $btnExportar.addEventListener("click", function () {
            let tableExport = new TableExport($tabla, {
                exportButtons: false, // No queremos botones adicionales
                filename: "Reporte de Peticiones de Trabajo", // Nombre del archivo de Excel
                sheetname: "Peticiones", // Título de la hoja
            });

            let datos = tableExport.getExportData();
            let preferenciasDocumento = datos.tabla.xlsx;

            tableExport.export2file(
                preferenciasDocumento.data,
                preferenciasDocumento.mimeType,
                preferenciasDocumento.filename,
                preferenciasDocumento.fileExtension,
                preferenciasDocumento.merges,
                preferenciasDocumento.RTL,
                preferenciasDocumento.sheetname
            );
        });
    });
</script> <!-- SCRIPTS PARA EXPORTAR A EXCEL -->

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<script type="text/javascript">
        $(document).ready(function () {           
            $('select[id^="usuarioSelect_"]').each(function () {
                var usuarioSelect = $(this); 
                var selectedDivision = usuarioSelect.data('division-id');
                var ordenTrabajoId = usuarioSelect.closest('tr').find('span[id^="personalAsignado_"]').data('orden-id');
                var personalAsignado = $('#personalAsignado_' + ordenTrabajoId);
        
                if (selectedDivision && usuarioSelect.find('option').length <= 1) {
                    $.ajax({
                        url: '@Url.Page("./Index", "UsuariosFiltrados")',
                        type: 'GET',
                        data: { division: selectedDivision },
                        success: function (data) {                        
                            usuarioSelect.empty(); 
                            usuarioSelect.append('<option hidden selected value="">Seleccione el usuario</option>');
                            usuarioSelect.append('<option value="-1">Sin asignación</option>');
                            $.each(data, function (index, usuario) {
                                usuarioSelect.append('<option value="' + usuario.iD_Usuario_Pk + '">' + usuario.nombre + ' ' + usuario.apellido + '</option>');
                            });
                        },
                        error: function (error) {
                            console.log('Error:', error);
                        }
                    });
                }
                                 
                if (ordenTrabajoId) {
                    $.ajax({
                        url: '@Url.Page("./Index", "UsuarioPorPt")',
                        type: 'GET',
                        data: { PT: ordenTrabajoId }, 
                        success: function (data) {                              
                            if (data[0] == null) 
                            {
                                personalAsignado.empty();
                                personalAsignado.append('<span>No se asignó personal</span>');
                            }
                            else 
                            {
                                personalAsignado.empty();
                                personalAsignado.append('<span>' + data[0].nombre + ' ' + data[0].apellido + '</span>');
                            }                        
                        },
                        error: function (error) {
                            console.log('Error en la carga de información del usuario asignado:', error);
                        }
                    }); //SE COLOCA EL USUARIO ASIGNADO EN EL SPAN
                }
            }); //LISTADO DE USUARIOS
    
            $('select[id^="usuarioSelect_"]').change(function () {
                var selectedOption = $(this).find("option:selected");
                var selectedUsuarioId = selectedOption.val();
                var selectedOrdenTrabajoId = $(this).attr("id").split("_")[1];             
                $('#usuarioNombre').text(selectedOption.text()); 
                $('#usuarioId').val(selectedUsuarioId); 
                $('#ordenTrabajoId').val(selectedOrdenTrabajoId); 

                $('#confirmModal').modal('show'); 
            }); //EVENTO ONCHANGE EN EL SELECT

            $('.PrioridadSelect').change(function () {
                var selectedPrioridad = parseInt($(this).val());
                var ordenTrabajoId = parseInt($(this).closest('td').data('orden-trabajo-id'));                      
                $('#prioridadInput').val(selectedPrioridad);  
                $('#prioridadDisplay').text(selectedPrioridad);  
                $('#ordenTrabajo').val(ordenTrabajoId);                         
            
                $('#confirmPrioridadModal').modal('show');
            });                            

            $('#cancelaAsignacion').click(function () {            
                $('#confirmModal').modal('hide');
            });

            $('#cancelaPrioridad').click(function () {
                $('#confirmPrioridadModal').modal('hide');            
            });
        });
</script>

<style>
    header {
        background-color: #1d3557;
        color: #f1faee;
        padding: 10px 0;
        box-shadow: 0px 2px 8px rgba(0, 0, 0, 0.1);
    }

    .submit {
        background-color: #e63946;
        color: #f1faee;
        border: none;
        padding: 10px 20px;
        font-size: 1em;
        border-radius: 5px;
        cursor: pointer;
        transition: background-color 0.3s, transform 0.3s, box-shadow 0.3s;
    }

        .submit:hover {
            background-color: #d62828;
            transform: scale(1.05);
            box-shadow: 0px 4px 12px rgba(0, 0, 0, 0.3);
        }

    .navbar {
        display: flex;
        align-items: center;
        justify-content: space-between;
        max-width: 1200px;
        margin: 0 auto;
        padding: 0 20px;
    }

    .logout-icon {
        background-color: #e63946; /* Color del botón */
        color: #f1faee;
        padding: 8px 12px;
        border-radius: 5px;
        text-decoration: none;
        transition: background-color 0.3s;
    }

        .logout-icon:hover {
            background-color: #d62828; /* Color al pasar el cursor */
        }

    footer {
        background-color: #1d3557;
        color: #f1faee;
        padding: 15px 0;
        text-align: center;
        font-size: 0.9em;
        position: fixed;
        width: 100%;
        bottom: 0;
    }

    #warningMessagePen {
        display: block;
        overflow: auto;
        word-wrap: break-word;
    }

    a.btn-action, button {
        display: inline-block;
        text-decoration: none;
        padding: 4px 6px; /* Ajustar el padding */
        margin: 2px; /* Reducir margen */
        border: 1px solid #003d6b; /* Bordes de botones */
        border-radius: 4px; /* Bordes más redondeados */
        background-color: #003d6b; /* Color de fondo de los botones */
        color: white;
        transition: background-color 0.3s, transform 0.3s;
        font-size: 0.8em; /* Tamaño de fuente reducido */
    }

        a.btn-action:hover, button:hover {
            background-color: #002e5d; /* Color al pasar el mouse */
            transform: translateY(-1px); /* Sutil efecto al pasar el mouse */
        }

    table {
        width: 100%; /* Asegura que la tabla ocupe todo el ancho */
        border-collapse: collapse; /* Colapsa los bordes de la tabla */
        font-size: 0.75em; /* Tamaño de fuente más pequeño */
    }

    th, td {
        padding: 4px;
        text-align: left;
        border-bottom: 1px solid #ddd;
        height: 8vh;
    }

    th {
        background-color: #e0e8f1; /* Fondo de los encabezados */
        color: #003d6b; /* Color del texto de los encabezados */
    }

    .modal-content {
        padding: 5px;
    }

    .modal-header, .modal-footer {
        border: none;
    }

    button {
        display: inline-block;
        text-decoration: none;
        padding: 4px 6px; /* Ajustar el padding */
        margin: 2px; /* Reducir margen */
        border: 1px solid #4caf50; /* Bordes de botones */
        border-radius: 4px; /* Bordes más redondeados */
        background-color: #4caf50; /* Color de fondo de los botones */
        color: white;
        transition: background-color 0.3s, transform 0.3s;
        font-size: 0.8em; /* Tamaño de fuente reducido */
    }

        button:hover {
            background-color: #4caf50; /* Mantener el color al pasar el mouse */
            transform: translateY(-2px); /* Efecto al pasar el mouse */
        }

    .filtrar {
        display: inline-block;
        text-decoration: none;
        padding: 4px 6px; /* Ajustar el padding */
        margin: 2px; /* Reducir margen */
        border: 1px solid #ff9800; /* Bordes de botones */
        border-radius: 4px; /* Bordes más redondeados */
        background-color: #ff9800; /* Color de fondo de los botones */
        color: white;
        transition: background-color 0.3s, transform 0.3s;
        font-size: 0.8em; /* Tamaño de fuente reducido */
    }

        .filtrar:hover {
            background-color: #ff9800; /* Mantener el color al pasar el mouse */
            transform: translateY(-2px); /* Efecto al pasar el mouse */
        }

    table tr:nth-child(odd) td {
        background-color: #e0e8f1;
    }

    table tr:nth-child(even) td {
        background-color: #eeeeee;
    }

    .pag {
        margin: 5px;
        text-decoration: none;
        color: midnightblue;
    }

    .container {
        width: auto !important;
        margin: 0 !important;
        padding: 0 !important;
        max-width: none !important;
    }

</style> 